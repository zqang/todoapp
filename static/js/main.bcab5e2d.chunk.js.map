{"version":3,"sources":["TodoItem.jsx","todosData.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","prevState","map","todo","todoItems","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAsBeA,MAnBf,SAAkBC,GAOd,OACI,sBAAKC,UAAU,YAAf,UACI,uBACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAElD,mBAAGC,MAAOT,EAAMI,KAAKC,UAbN,CACnBK,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAUqC,KAAjD,SAAwDZ,EAAMI,KAAKS,WCWhEC,EA5BG,CACd,CACIN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,WACNR,WAAW,GAEf,CACIG,GAAI,EACJK,KAAM,mCACNR,WAAW,ICkBJU,E,kDApCX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,MAAOH,GAEX,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBALV,E,gDAQd,SAAaV,GACTW,KAAKC,UAAS,SAAAC,GAUV,MAAO,CACHJ,MAViBI,EAAUJ,MAAMK,KAAI,SAAAC,GACrC,OAAIA,EAAKf,KAAOA,EACP,2BACFe,GADL,IAEElB,WAAYkB,EAAKlB,YAGdkB,W,oBAQnB,WAAU,IAAD,OACCC,EAAYL,KAAKH,MAAMC,MAAMK,KAAI,SAAAlB,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,EAAMG,aAAc,EAAKA,cAAxCH,EAAKI,OAEnE,OACI,qBAAKP,UAAU,YAAf,SACKuB,Q,GA/BCC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bcab5e2d.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './style.css'\r\n\r\nfunction TodoItem(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    \r\n    return (\r\n        <div className=\"todo-item\">\r\n            <input \r\n                type=\"checkbox\" \r\n                checked={props.item.completed} \r\n                onChange={() => props.handleChange(props.item.id)}\r\n            />\r\n            <p style={props.item.completed ? completedStyle: null}>{props.item.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","const todosData = [\r\n    {\r\n        id: 1,\r\n        text: \"Take out the trash\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Grocery shopping\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Clean gecko tank\",\r\n        completed: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: \"Mow lawn\",\r\n        completed: true\r\n    },\r\n    {\r\n        id: 5,\r\n        text: \"Catch up on Arrested Development\",\r\n        completed: false\r\n    }\r\n]\r\n\r\nexport default todosData","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport todosData from \"./todosData\"\nimport './style.css'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: todosData\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n    \n    handleChange(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                  return {\n                    ...todo,\n                    completed: !todo.completed\n                  }\n                }\n                return todo\n            })\n            return {\n                todos: updatedTodos\n            }\n        })\n    }\n    \n    render() {\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleChange={this.handleChange}/>)\n        \n        return (\n            <div className=\"todo-list\">\n                {todoItems}\n            </div>\n        )    \n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}